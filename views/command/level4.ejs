<%- include('../layout', { body: `
<div class="challenge">
  <div class="challenge-description">
    <h3>命令执行漏洞 - Level 4</h3>
    <p>这个挑战演示了模板注入漏洞。</p>
    <p>该应用将用户输入的内容直接用作EJS模板进行渲染，而没有进行任何过滤。尝试利用这个漏洞执行系统命令。</p>
  </div>

  <div class="challenge-form">
    <form method="POST" action="/command/level4">
      <div class="form-group">
        <label for="template">输入EJS模板代码:</label>
        <textarea id="template" name="template" class="form-control" rows="5">${template}</textarea>
      </div>
      <button type="submit" class="btn btn-primary">渲染</button>
      <a href="/source/command/4" class="btn">查看源码</a>
    </form>
  </div>

  ${result ? `
  <div class="challenge-result">
    <h4>渲染结果:</h4>
    <pre>${result}</pre>
  </div>
  ` : ''}

  <div class="challenge-hint">
    <h4>提示:</h4>
    <p>EJS模板中的<code>&lt;%= ... %&gt;</code>标签会执行其中的JavaScript代码并输出结果。</p>
    <p>尝试以下示例：</p>
    <ul>
      <li><code>&lt;%= 2 + 2 %&gt;</code> - 执行简单计算</li>
      <li><code>&lt;%= process.env %&gt;</code> - 获取环境变量</li>
      <li><code>&lt;%= global.process.mainModule.require('child_process').execSync('命令') %&gt;</code> - 执行系统命令</li>
    </ul>
  </div>
</div>
` }) %> 