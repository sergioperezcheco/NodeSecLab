<%- include('../layout', { body: `
<div class="challenge">
  <div class="challenge-description">
    <h3>文件下载 - Level 2</h3>
    <p>这个页面实现了基本的文件下载保护。尝试绕过这个保护。</p>
    <p>提示：服务器使用了 <code>path.basename()</code> 函数来防止目录遍历。</p>
  </div>
  
  <div class="challenge-form">
    <h4>可下载文件列表</h4>
    <ul class="files-list">
      ${files.map(file => `
        <li>
          <a href="/download/level2/download?file=${file}">${file}</a>
        </li>
      `).join('')}
    </ul>
    
    <h4>自定义下载</h4>
    <form action="/download/level2/download" method="GET">
      <div class="form-group">
        <label for="file">文件名：</label>
        <input type="text" id="file" name="file" placeholder="输入要下载的文件名">
      </div>
      <button type="submit" class="btn">下载</button>
      <a href="/source/download/2" class="btn">查看源码</a>
    </form>
  </div>
  
  <div class="challenge-hint">
    <h4>安全实现说明</h4>
    <p>这个页面使用了 <code>path.basename()</code> 函数来提取文件名，防止目录遍历攻击。</p>
    <p>例如，如果输入 <code>../../../app.js</code>，函数会返回 <code>app.js</code>，只在下载目录中查找该文件。</p>
    <p>这种实现方式可以有效防止目录遍历漏洞。</p>
  </div>
</div>
` }) %> 